
-- ALTER SESSION SET CURRENT_SCHEMA = "SIRECEC_V4";
ALTER SESSION SET CURRENT_SCHEMA = "DV_SIRECEC";

SET SQLBLANKLINES ON;
SET DEFINE OFF;
ALTER SESSION SET NLS_DATE_FORMAT = 'MM/DD/SYYYY HH24:MI:SS';
ALTER SESSION SET NLS_TIMESTAMP_TZ_FORMAT = 'MM/DD/SYYYY HH24:MI:SS.FF TZH:TZM';
ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'MM/DD/SYYYY HH24:MI:SS.FF';
ALTER SESSION SET NLS_NUMERIC_CHARACTERS = '.,';
ALTER SESSION SET NLS_NCHAR_CONV_EXCP = FALSE;
ALTER SESSION SET TIME_ZONE = '-05:00';

--
-- Drop table "Modulo"
--
DROP TABLE "Modulo";

--
-- Drop view "Clasificadores"
--
DROP VIEW "Clasificadores";

--
-- Drop view "Usuarios"
--
DROP VIEW "Usuarios";

--
-- Drop table "Clasificador"
--
DROP TABLE "Clasificador";

--
-- Drop table "ClasificadorTipo"
--
DROP TABLE "ClasificadorTipo";

--
-- Drop table "AuthRoleClaims"
--
DROP TABLE "AuthRoleClaims";

--
-- Drop table "AuthUserRoles"
--
DROP TABLE "AuthUserRoles";

--
-- Drop table "AuthRoles"
--
DROP TABLE "AuthRoles";

--
-- Drop table "AuthUserClaims"
--
DROP TABLE "AuthUserClaims";

--
-- Drop table "AuthUserLogins"
--
DROP TABLE "AuthUserLogins";

--
-- Drop table "AuthUserTokens"
--
DROP TABLE "AuthUserTokens";

--
-- Drop table "AuthUsers"
--
DROP TABLE "AuthUsers";

--
-- Create table "AuthUsers"
--
CREATE TABLE "AuthUsers" (
  "Id"                   NUMBER(10, 0)   GENERATED BY DEFAULT ON NULL AS IDENTITY,
  "FirstName"            NVARCHAR2(2000) NOT NULL,
  "LastName"             NVARCHAR2(2000) NOT NULL,
  "IsActive"             NUMBER(1, 0)    NOT NULL,
  "CompanyId"            NUMBER(10, 0),
  "DependenceId"         NUMBER(10, 0),
  "UserName"             NVARCHAR2(256),
  "NormalizedUserName"   NVARCHAR2(256),
  "Email"                NVARCHAR2(256),
  "NormalizedEmail"      NVARCHAR2(256),
  "EmailConfirmed"       NUMBER(1, 0)    NOT NULL,
  "PasswordHash"         NVARCHAR2(2000),
  "SecurityStamp"        NVARCHAR2(2000),
  "ConcurrencyStamp"     NVARCHAR2(2000),
  "PhoneNumber"          NVARCHAR2(2000),
  "PhoneNumberConfirmed" NUMBER(1, 0)    NOT NULL,
  "TwoFactorEnabled"     NUMBER(1, 0)    NOT NULL,
  "LockoutEnd"           TIMESTAMP(7) WITH TIME ZONE,
  "LockoutEnabled"       NUMBER(1, 0)    NOT NULL,
  "AccessFailedCount"    NUMBER(10, 0)   NOT NULL,
  CONSTRAINT "PK_AuthUsers" PRIMARY KEY ("Id") USING INDEX TABLESPACE SIRECEC_V4 STORAGE (INITIAL 64 K
                                                                                          NEXT 1 M
                                                                                          MAXEXTENTS UNLIMITED)
)
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

CREATE INDEX "EmailIndex" ON "AuthUsers" ("NormalizedEmail")
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

CREATE UNIQUE INDEX "UserNameIndex" ON "AuthUsers" ("NormalizedUserName")
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

--
-- Create table "AuthUserTokens"
--
CREATE TABLE "AuthUserTokens" (
  "UserId"        NUMBER(10, 0)  NOT NULL,
  "LoginProvider" NVARCHAR2(450) NOT NULL,
  "Name"          NVARCHAR2(450) NOT NULL,
  "Value"         NVARCHAR2(2000),
  CONSTRAINT "PK_AuthUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name") USING INDEX TABLESPACE SIRECEC_V4
)
TABLESPACE SIRECEC_V4
LOGGING;

--
-- Create foreign key "FK_AuthUserTokens_AuthUsers_U~" on table "AuthUserTokens"
--
ALTER TABLE "AuthUserTokens"
ADD CONSTRAINT "FK_AuthUserTokens_AuthUsers_U~" FOREIGN KEY ("UserId")
REFERENCES "AuthUsers" ("Id") ON DELETE CASCADE;

--
-- Create table "AuthUserLogins"
--
CREATE TABLE "AuthUserLogins" (
  "LoginProvider"       NVARCHAR2(450) NOT NULL,
  "ProviderKey"         NVARCHAR2(450) NOT NULL,
  "ProviderDisplayName" NVARCHAR2(2000),
  "UserId"              NUMBER(10, 0)  NOT NULL,
  CONSTRAINT "PK_AuthUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey") USING INDEX TABLESPACE SIRECEC_V4
)
TABLESPACE SIRECEC_V4
LOGGING;

CREATE INDEX "IX_AuthUserLogins_UserId" ON "AuthUserLogins" ("UserId")
TABLESPACE SIRECEC_V4
LOGGING;

--
-- Create foreign key "FK_AuthUserLogins_AuthUsers_U~" on table "AuthUserLogins"
--
ALTER TABLE "AuthUserLogins"
ADD CONSTRAINT "FK_AuthUserLogins_AuthUsers_U~" FOREIGN KEY ("UserId")
REFERENCES "AuthUsers" ("Id") ON DELETE CASCADE;

--
-- Create table "AuthUserClaims"
--
CREATE TABLE "AuthUserClaims" (
  "Id"         NUMBER(10, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY,
  "UserId"     NUMBER(10, 0) NOT NULL,
  "ClaimType"  NVARCHAR2(2000),
  "ClaimValue" NVARCHAR2(2000),
  CONSTRAINT "PK_AuthUserClaims" PRIMARY KEY ("Id") USING INDEX TABLESPACE SIRECEC_V4
)
TABLESPACE SIRECEC_V4
LOGGING;

CREATE INDEX "IX_AuthUserClaims_UserId" ON "AuthUserClaims" ("UserId")
TABLESPACE SIRECEC_V4
LOGGING;

--
-- Create foreign key "FK_AuthUserClaims_AuthUsers_U~" on table "AuthUserClaims"
--
ALTER TABLE "AuthUserClaims"
ADD CONSTRAINT "FK_AuthUserClaims_AuthUsers_U~" FOREIGN KEY ("UserId")
REFERENCES "AuthUsers" ("Id") ON DELETE CASCADE;

--
-- Create table "AuthRoles"
--
CREATE TABLE "AuthRoles" (
  "Id"               NUMBER(10, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY,
  "Name"             NVARCHAR2(256),
  "NormalizedName"   NVARCHAR2(256),
  "ConcurrencyStamp" NVARCHAR2(2000),
  CONSTRAINT "PK_AuthRoles" PRIMARY KEY ("Id") USING INDEX TABLESPACE SIRECEC_V4 STORAGE (INITIAL 64 K
                                                                                          NEXT 1 M
                                                                                          MAXEXTENTS UNLIMITED)
)
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

CREATE UNIQUE INDEX "RoleNameIndex" ON "AuthRoles" ("NormalizedName")
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

--
-- Create table "AuthUserRoles"
--
CREATE TABLE "AuthUserRoles" (
  "UserId" NUMBER(10, 0) NOT NULL,
  "RoleId" NUMBER(10, 0) NOT NULL,
  CONSTRAINT "PK_AuthUserRoles" PRIMARY KEY ("UserId", "RoleId") USING INDEX TABLESPACE SIRECEC_V4 STORAGE (INITIAL 64 K
                                                                                                            NEXT 1 M
                                                                                                            MAXEXTENTS UNLIMITED)
)
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

CREATE INDEX "IX_AuthUserRoles_RoleId" ON "AuthUserRoles" ("RoleId")
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

--
-- Create foreign key "FK_AuthUserRoles_AuthRoles_Ro~" on table "AuthUserRoles"
--
ALTER TABLE "AuthUserRoles"
ADD CONSTRAINT "FK_AuthUserRoles_AuthRoles_Ro~" FOREIGN KEY ("RoleId")
REFERENCES "AuthRoles" ("Id") ON DELETE CASCADE;

--
-- Create foreign key "FK_AuthUserRoles_AuthUsers_Us~" on table "AuthUserRoles"
--
ALTER TABLE "AuthUserRoles"
ADD CONSTRAINT "FK_AuthUserRoles_AuthUsers_Us~" FOREIGN KEY ("UserId")
REFERENCES "AuthUsers" ("Id") ON DELETE CASCADE;

--
-- Create table "AuthRoleClaims"
--
CREATE TABLE "AuthRoleClaims" (
  "Id"         NUMBER(10, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY,
  "RoleId"     NUMBER(10, 0) NOT NULL,
  "ClaimType"  NVARCHAR2(2000),
  "ClaimValue" NVARCHAR2(2000),
  CONSTRAINT "PK_AuthRoleClaims" PRIMARY KEY ("Id") USING INDEX TABLESPACE SIRECEC_V4
)
TABLESPACE SIRECEC_V4
LOGGING;

CREATE INDEX "IX_AuthRoleClaims_RoleId" ON "AuthRoleClaims" ("RoleId")
TABLESPACE SIRECEC_V4
LOGGING;

--
-- Create foreign key "FK_AuthRoleClaims_AuthRoles_R~" on table "AuthRoleClaims"
--
ALTER TABLE "AuthRoleClaims"
ADD CONSTRAINT "FK_AuthRoleClaims_AuthRoles_R~" FOREIGN KEY ("RoleId")
REFERENCES "AuthRoles" ("Id") ON DELETE CASCADE;

--
-- Create table "ClasificadorTipo"
--
CREATE TABLE "ClasificadorTipo" (
  "Id"          NUMBER(10, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY,
  "Nombre"      NVARCHAR2(2000),
  "Descripcion" NVARCHAR2(2000),
  "CreadoEl"    TIMESTAMP(7)  DEFAULT (CURRENT_TIMESTAMP),
  "CreadoPor"   NUMBER(10, 0) DEFAULT (((1))),
  "EditadoEl"   TIMESTAMP(7)  DEFAULT (CURRENT_TIMESTAMP),
  "EditadoPor"  NUMBER(10, 0) DEFAULT (((1))),
  CONSTRAINT "PK_ClasificadorTipo" PRIMARY KEY ("Id") USING INDEX TABLESPACE SIRECEC_V4 STORAGE (INITIAL 64 K
                                                                                                 NEXT 1 M
                                                                                                 MAXEXTENTS UNLIMITED)
)
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

--
-- Create table "Clasificador"
--
CREATE TABLE "Clasificador" (
  "Id"          NUMBER(10, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY,
  "TipoId"      NUMBER(10, 0) NOT NULL,
  "PadreId"     NUMBER(10, 0) NOT NULL,
  "Nombre"      NVARCHAR2(2000),
  "Descripcion" NVARCHAR2(2000),
  "Orden"       NUMBER(10, 0),
  "CreadoPor"   NUMBER(10, 0) DEFAULT (((1))),
  "EditadoPor"  NUMBER(10, 0) DEFAULT (((1))),
  "Activo"      NUMBER(1, 0)  DEFAULT (((1))),
  "CreadoEl"    TIMESTAMP(7)  DEFAULT (CURRENT_TIMESTAMP) NOT NULL,
  "EditadoEl"   TIMESTAMP(7)  DEFAULT (CURRENT_TIMESTAMP) NOT NULL,
  CONSTRAINT "PK_Clasificador" PRIMARY KEY ("Id") USING INDEX TABLESPACE SIRECEC_V4 STORAGE (INITIAL 64 K
                                                                                             NEXT 1 M
                                                                                             MAXEXTENTS UNLIMITED)
)
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

CREATE INDEX "IX_Clasificador_TipoId" ON "Clasificador" ("TipoId")
TABLESPACE SIRECEC_V4
STORAGE (INITIAL 64 K
         NEXT 1 M
         MAXEXTENTS UNLIMITED)
LOGGING;

--
-- Create foreign key "FK_Clasificador_ClasificadorT~" on table "Clasificador"
--
ALTER TABLE "Clasificador"
ADD CONSTRAINT "FK_Clasificador_ClasificadorT~" FOREIGN KEY ("TipoId")
REFERENCES "ClasificadorTipo" ("Id") ON DELETE CASCADE;

--
-- Create view "Usuarios"
--
CREATE VIEW "Usuarios" (
  "RoleId",
  "RoleName",
  "CompanyId",
  "CompanyName",
  "CompanyAcronym",
  "DependenceId",
  "DependenceName",
  "Id",
  "Name",
  "FirstName",
  "LastName",
  "Email",
  "UserName",
  "EmailConfirmed",
  "PasswordHash",
  "SecurityStamp",
  "PhoneNumber",
  "PhoneNumberConfirmed",
  "TwoFactorEnabled",
  "LockoutEnd",
  "LockoutEnabled",
  "AccessFailedCount",
  "ConcurrencyStamp",
  "NormalizedEmail",
  "NormalizedUserName",
  "IsActive"
) AS
    SELECT UR."RoleId",
           R."Name" AS "RoleName",
           U."CompanyId",
           C."Nombre" AS "CompanyName",
           C."Descripcion" AS "CompanyAcronym",
           U."DependenceId",
           D."Nombre" AS "DependenceName",
           U."Id",
           U."FirstName" || ' ' || U."LastName" AS "Name",
           U."FirstName",
           U."LastName",
           U."Email",
           U."UserName",
           U."EmailConfirmed",
           U."PasswordHash",
           U."SecurityStamp",
           U."PhoneNumber",
           U."PhoneNumberConfirmed",
           U."TwoFactorEnabled",
           U."LockoutEnd",
           U."LockoutEnabled",
           U."AccessFailedCount",
           U."ConcurrencyStamp",
           U."NormalizedEmail",
           U."NormalizedUserName",
           U."IsActive"
      FROM "Clasificador" D
        RIGHT OUTER JOIN "AuthUsers" U
          ON D."Id" = U."DependenceId"
        LEFT OUTER JOIN "Clasificador" C
          ON U."CompanyId" = C."Id"
        LEFT OUTER JOIN "AuthRoles" R
          RIGHT OUTER JOIN "AuthUserRoles" UR
            ON R."Id" = UR."RoleId"
          ON U."Id" = UR."UserId";

--
-- Create view "Clasificadores"
--
CREATE VIEW "Clasificadores" (
  "PadreTipoID",
  "PadreTipoNombre",
  "PadreId",
  "PadreNombre",
  "TipoId",
  "TipoNombre",
  "Id",
  "Nombre",
  "Descripcion",
  "Orden",
  "Hijos",
  "Activo",
  "CreadoEl",
  "CreadoPor",
  "EditadoEl",
  "EditadoPor"
) AS
    SELECT P."TipoId" AS "PadreTipoID",
           PT."Nombre" AS "PadreTipoNombre",
           C."PadreId",
           P."Nombre" AS "PadreNombre",
           C."TipoId",
           T."Nombre" AS "TipoNombre",
           C."Id",
           C."Nombre",
           C."Descripcion",
           C."Orden",
           (SELECT COUNT(*)
               FROM "Clasificador"
               WHERE "PadreId" = C."Id") AS "Hijos",
           C."Activo",
           C."CreadoEl",
           C."CreadoPor",
           C."EditadoEl",
           C."EditadoPor"
      FROM "Clasificador" C
        LEFT OUTER JOIN "ClasificadorTipo" T
          ON C."TipoId" = T."Id"
        LEFT OUTER JOIN "Clasificador" P
          ON C."PadreId" = P."Id"
        LEFT OUTER JOIN "ClasificadorTipo" PT
          ON PT."Id" = P."TipoId";

--
-- Create table "Modulo"
--
CREATE TABLE "Modulo" (
  "Id"                   NUMBER(10, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY,
  "Nombre"               NVARCHAR2(2000),
  "Descripcion"          NVARCHAR2(2000),
  "Justificacion"        NVARCHAR2(2000),
  "Metodologia"          NVARCHAR2(2000),
  "ActividadAprendizaje" NVARCHAR2(2000),
  "ActividadEvaluacion"  NVARCHAR2(2000),
  "Objetivos"            NVARCHAR2(2000),
  "Orden"                NUMBER(10, 0),
  "CreadoPor"            NUMBER(10, 0) DEFAULT (((1))),
  "EditadoPor"           NUMBER(10, 0) DEFAULT (((1))),
  "Activo"               NUMBER(1, 0)  DEFAULT (((1))),
  "CreadoEl"             TIMESTAMP(7)  DEFAULT (CURRENT_TIMESTAMP) NOT NULL,
  "EditadoEl"            TIMESTAMP(7)  DEFAULT (CURRENT_TIMESTAMP) NOT NULL,
  CONSTRAINT "PK_Modulo" PRIMARY KEY ("Id") USING INDEX TABLESPACE SIRECEC_V4
)
TABLESPACE SIRECEC_V4
LOGGING;

COMMIT;
