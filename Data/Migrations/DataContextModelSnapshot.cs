// <auto-generated />
using System;
using ESAP.Sirecec.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace ESAP.Sirecec.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 30);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ESAP.Sirecec.Data.Core.Clasificador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreadoEl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreadoPor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("EditadoEl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EditadoPor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Orden")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PadreId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TipoId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("Clasificador");
                });

            modelBuilder.Entity("ESAP.Sirecec.Data.Core.ClasificadorTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreadoEl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreadoPor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("EditadoEl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EditadoPor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("ClasificadorTipo");
                });

            modelBuilder.Entity("ESAP.Sirecec.Data.Core.Clasificadores", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("Activo")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime>("CreadoEl")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("CreadoPor")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("EditadoEl")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("EditadoPor")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("Hijos")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Orden")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PadreId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("PadreNombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("PadreTipoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("PadreTipoNombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("TipoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TipoNombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.ToView("Clasificadores", (string)null);
                });

            modelBuilder.Entity("ESAP.Sirecec.Data.Core.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActividadAprendizaje")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ActividadEvaluacion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreadoEl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CreadoPor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("EditadoEl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EditadoPor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Justificacion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Metodologia")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Objetivos")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Orden")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("Modulo");
                });

            modelBuilder.Entity("ESAP.Sirecec.Data.Identity.AuthRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AuthRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "5a31f136-a353-451f-bacb-ecb2cafacd76",
                            Name = "Super Administrador",
                            NormalizedName = "SUPER_ADMINISTRADOR"
                        });
                });

            modelBuilder.Entity("ESAP.Sirecec.Data.Identity.AuthUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("DependenceId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AuthUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "194df7d2-823b-4944-9662-f3d9496e8f54",
                            Email = "dvargas@nemedi.com",
                            EmailConfirmed = true,
                            FirstName = "Diego",
                            IsActive = true,
                            LastName = "Vargas",
                            LockoutEnabled = false,
                            NormalizedEmail = "DVARGAS@NEMEDI.COM",
                            NormalizedUserName = "DVARGAS@NEMEDI.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAfvSJAwLSMRbwWJVbS2BUd4Sp2cxgCW8ohburXrO39yVDtxNtZEfAJvoeObkCKoMA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "09dc444c-c7ce-48cd-94ff-95269ffd4762",
                            TwoFactorEnabled = false,
                            UserName = "dvargas@nemedi.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c32b40a1-0fb1-4372-9d9f-c0545aa53df0",
                            Email = "diego.vargasv@esap.edu.co",
                            EmailConfirmed = true,
                            FirstName = "Diego",
                            IsActive = true,
                            LastName = "Vargas",
                            LockoutEnabled = false,
                            NormalizedEmail = "DIEGO.VARGASV@ESAP.EDU.CO",
                            NormalizedUserName = "DIEGO.VARGASV@ESAP.EDU.CO",
                            PasswordHash = "AQAAAAEAACcQAAAAEFbv2pm5iQXLfiwwa12o8NOykBvnZaXW5h1TmkqX7tK21ZJJjL1ic3J2ePWBxfhjtw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aca5662e-077a-4400-9e42-f9b5a16862e2",
                            TwoFactorEnabled = false,
                            UserName = "diego.vargasv@esap.edu.co"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "50539926-4e99-47f3-b318-49f639c31b91",
                            Email = "camilo.rincon@esap.edu.co",
                            EmailConfirmed = true,
                            FirstName = "Camilo",
                            IsActive = true,
                            LastName = "Rincón",
                            LockoutEnabled = false,
                            NormalizedEmail = "CAMILO.RINCON@ESAP.EDU.CO",
                            NormalizedUserName = "CAMILO.RINCON@ESAP.EDU.CO",
                            PasswordHash = "AQAAAAEAACcQAAAAENevdiVjD1x7BScARlXlsolKLd8zibqMUidPiq/Eerlv1V/Vt12Ce02myKMWwKGaKQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b069f812-7133-4990-a7a1-ba34b6d44636",
                            TwoFactorEnabled = false,
                            UserName = "camilo.rincon@esap.edu.co"
                        });
                });

            modelBuilder.Entity("ESAP.Sirecec.Data.Identity.Users", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CompanyAcronym")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("DependenceId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("DependenceName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("RoleName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.ToView("Usuarios", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuthUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AuthUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AuthUserTokens", (string)null);
                });

            modelBuilder.Entity("ESAP.Sirecec.Data.Core.Clasificador", b =>
                {
                    b.HasOne("ESAP.Sirecec.Data.Core.ClasificadorTipo", "ClasificadorTipo")
                        .WithMany("Clasificadores")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClasificadorTipo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ESAP.Sirecec.Data.Identity.AuthRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ESAP.Sirecec.Data.Identity.AuthUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ESAP.Sirecec.Data.Identity.AuthUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("ESAP.Sirecec.Data.Identity.AuthRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESAP.Sirecec.Data.Identity.AuthUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ESAP.Sirecec.Data.Identity.AuthUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ESAP.Sirecec.Data.Core.ClasificadorTipo", b =>
                {
                    b.Navigation("Clasificadores");
                });
#pragma warning restore 612, 618
        }
    }
}
